apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'application'

applicationName = "$projectName"
mainClassName = organization + '.GStarter'
run.systemProperties = ['environment': 'development', 'app.name': "$projectName", 'app.version': "$version"]
// since it's not yet possibile to set system properties
// into launch script (http://issues.gradle.org/browse/GRADLE-1456)
// you should set a variable (PROTO-APP-OPTS).
// By default 'environment' is set to development
// Ex: export APP_OPTS="-Denvironment=integration"
startScripts.optsEnvironmentVar = 'APP_OPTS'

repositories {
    mavenCentral()
    mavenRepo url: "http://repository.springsource.com/maven/bundles/release"
    mavenRepo url: "https://repository.apache.org/content/repositories/snapshots/"
    mavenRepo url: "http://repo1.maven.org/maven2"
    mavenRepo url: "http://download.java.net/maven/2/"
    mavenRepo url: "http://repo.grails.org/grails/libs-releases"
}
String springVersion = '3.1.2.RELEASE'

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.0.6'
    groovy 'org.codehaus.groovy:groovy-all:2.0.6'
    compile "org.slf4j:slf4j-api:1.6.6"
    compile "org.slf4j:slf4j-log4j12:1.6.6"
    compile("log4j:log4j:1.2.17") {
        exclude(module: 'jmxtools')
        exclude(module: 'jmxri')
    }
    compile "log4j:apache-log4j-extras:1.1"
    compile "junit:junit:4.11"
    compile "org.springframework:spring-core:$springVersion"
    compile "org.springframework:spring-context:$springVersion"
    compile "org.springframework:spring-beans:$springVersion"
    compile "org.springframework:spring-jms:$springVersion"
    compile "org.springframework:spring-jdbc:$springVersion"
    compile "org.apache.commons:commons-lang3:3.1"
    compile "commons-pool:commons-pool:1.5.5"
    compile "commons-collections:commons-collections:20040616"
    compile('org.grails:grails-spring:2.1.0') {
        exclude(module: 'jcl-over-slf4j')
        exclude(module: 'jul-to-slf4j')
        exclude(module: 'concurrentlinkedhashmap-lruj')
    }

    //show logs during the test phase
    test {
        testLogging.showStandardStreams = true
    }

}


